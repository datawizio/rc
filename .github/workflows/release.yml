name: Release

on:
  push:
    branches: [master, dev]
  pull_request:
    branches: [master, dev]

jobs:
  release:
    name: Release Package
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    
    permissions:
      contents: write
      packages: write
      id-token: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@datawizio'

      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run build
        run: yarn build

      - name: Determine version bump type
        id: version
        run: |
          if [ "${{ github.ref }}" = "refs/heads/master" ]; then
            echo "bump_type=minor" >> $GITHUB_OUTPUT
            echo "Version bump: minor (master branch)"
          elif [ "${{ github.ref }}" = "refs/heads/dev" ]; then
            echo "bump_type=patch" >> $GITHUB_OUTPUT
            echo "Version bump: patch (dev branch)"
          else
            echo "bump_type=none" >> $GITHUB_OUTPUT
            echo "No version bump needed"
          fi

      - name: Bump version
        if: steps.version.outputs.bump_type != 'none'
        run: |
          npm version ${{ steps.version.outputs.bump_type }} --no-git-tag-version
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
          echo "New version: $NEW_VERSION"

      - name: Update package.json and create commit
        if: steps.version.outputs.bump_type != 'none'
        run: |
          git add package.json
          git commit -m "Bump to version ${{ env.NEW_VERSION }}"
          git tag "v${{ env.NEW_VERSION }}"

      - name: Publish to GitHub Packages
        if: steps.version.outputs.bump_type != 'none'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npm publish

      - name: Push changes and tags
        if: steps.version.outputs.bump_type != 'none'
        run: |
          git push origin ${{ github.ref_name }}
          git push origin "v${{ env.NEW_VERSION }}"

      - name: Create GitHub Release
        if: steps.version.outputs.bump_type != 'none'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v${{ env.NEW_VERSION }}"
          release_name: "Release v${{ env.NEW_VERSION }}"
          body: |
            ## Changes in v${{ env.NEW_VERSION }}
            
            This release includes the latest changes from the ${{ github.ref_name }} branch.
            
            ### Installation
            ```bash
            npm install @datawizio/rc@${{ env.NEW_VERSION }}
            ```
          draft: false
          prerelease: ${{ github.ref_name == 'dev' }}
